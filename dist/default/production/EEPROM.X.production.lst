

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Jan 07 20:40:23 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Generated 22/03/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59     0004                     fsr             equ	4
    60     0004                     fsr0            equ	4
    61     0000                     indf            equ	0
    62     0000                     indf0           equ	0
    63     0002                     pc              equ	2
    64     0002                     pcl             equ	2
    65     000A                     pclath          equ	10
    66     0003                     status          equ	3
    67     0000                     INDF            equ	0	;# 
    68     0001                     TMR0            equ	1	;# 
    69     0002                     PCL             equ	2	;# 
    70     0003                     STATUS          equ	3	;# 
    71     0004                     FSR             equ	4	;# 
    72     0005                     PORTA           equ	5	;# 
    73     0006                     PORTB           equ	6	;# 
    74     0007                     PORTC           equ	7	;# 
    75     0008                     PORTD           equ	8	;# 
    76     0009                     PORTE           equ	9	;# 
    77     000A                     PCLATH          equ	10	;# 
    78     000B                     INTCON          equ	11	;# 
    79     000C                     PIR1            equ	12	;# 
    80     000D                     PIR2            equ	13	;# 
    81     000E                     TMR1            equ	14	;# 
    82     000E                     TMR1L           equ	14	;# 
    83     000F                     TMR1H           equ	15	;# 
    84     0010                     T1CON           equ	16	;# 
    85     0011                     TMR2            equ	17	;# 
    86     0012                     T2CON           equ	18	;# 
    87     0013                     SSPBUF          equ	19	;# 
    88     0014                     SSPCON          equ	20	;# 
    89     0015                     CCPR1           equ	21	;# 
    90     0015                     CCPR1L          equ	21	;# 
    91     0016                     CCPR1H          equ	22	;# 
    92     0017                     CCP1CON         equ	23	;# 
    93     0018                     RCSTA           equ	24	;# 
    94     0019                     TXREG           equ	25	;# 
    95     001A                     RCREG           equ	26	;# 
    96     001B                     CCPR2           equ	27	;# 
    97     001B                     CCPR2L          equ	27	;# 
    98     001C                     CCPR2H          equ	28	;# 
    99     001D                     CCP2CON         equ	29	;# 
   100     001E                     ADRESH          equ	30	;# 
   101     001F                     ADCON0          equ	31	;# 
   102     0081                     OPTION_REG      equ	129	;# 
   103     0085                     TRISA           equ	133	;# 
   104     0086                     TRISB           equ	134	;# 
   105     0087                     TRISC           equ	135	;# 
   106     0088                     TRISD           equ	136	;# 
   107     0089                     TRISE           equ	137	;# 
   108     008C                     PIE1            equ	140	;# 
   109     008D                     PIE2            equ	141	;# 
   110     008E                     PCON            equ	142	;# 
   111     0091                     SSPCON2         equ	145	;# 
   112     0092                     PR2             equ	146	;# 
   113     0093                     SSPADD          equ	147	;# 
   114     0094                     SSPSTAT         equ	148	;# 
   115     0098                     TXSTA           equ	152	;# 
   116     0099                     SPBRG           equ	153	;# 
   117     009C                     CMCON           equ	156	;# 
   118     009D                     CVRCON          equ	157	;# 
   119     009E                     ADRESL          equ	158	;# 
   120     009F                     ADCON1          equ	159	;# 
   121     010C                     EEDATA          equ	268	;# 
   122     010D                     EEADR           equ	269	;# 
   123     010E                     EEDATH          equ	270	;# 
   124     010F                     EEADRH          equ	271	;# 
   125     018C                     EECON1          equ	396	;# 
   126     018D                     EECON2          equ	397	;# 
   127     0000                     INDF            equ	0	;# 
   128     0001                     TMR0            equ	1	;# 
   129     0002                     PCL             equ	2	;# 
   130     0003                     STATUS          equ	3	;# 
   131     0004                     FSR             equ	4	;# 
   132     0005                     PORTA           equ	5	;# 
   133     0006                     PORTB           equ	6	;# 
   134     0007                     PORTC           equ	7	;# 
   135     0008                     PORTD           equ	8	;# 
   136     0009                     PORTE           equ	9	;# 
   137     000A                     PCLATH          equ	10	;# 
   138     000B                     INTCON          equ	11	;# 
   139     000C                     PIR1            equ	12	;# 
   140     000D                     PIR2            equ	13	;# 
   141     000E                     TMR1            equ	14	;# 
   142     000E                     TMR1L           equ	14	;# 
   143     000F                     TMR1H           equ	15	;# 
   144     0010                     T1CON           equ	16	;# 
   145     0011                     TMR2            equ	17	;# 
   146     0012                     T2CON           equ	18	;# 
   147     0013                     SSPBUF          equ	19	;# 
   148     0014                     SSPCON          equ	20	;# 
   149     0015                     CCPR1           equ	21	;# 
   150     0015                     CCPR1L          equ	21	;# 
   151     0016                     CCPR1H          equ	22	;# 
   152     0017                     CCP1CON         equ	23	;# 
   153     0018                     RCSTA           equ	24	;# 
   154     0019                     TXREG           equ	25	;# 
   155     001A                     RCREG           equ	26	;# 
   156     001B                     CCPR2           equ	27	;# 
   157     001B                     CCPR2L          equ	27	;# 
   158     001C                     CCPR2H          equ	28	;# 
   159     001D                     CCP2CON         equ	29	;# 
   160     001E                     ADRESH          equ	30	;# 
   161     001F                     ADCON0          equ	31	;# 
   162     0081                     OPTION_REG      equ	129	;# 
   163     0085                     TRISA           equ	133	;# 
   164     0086                     TRISB           equ	134	;# 
   165     0087                     TRISC           equ	135	;# 
   166     0088                     TRISD           equ	136	;# 
   167     0089                     TRISE           equ	137	;# 
   168     008C                     PIE1            equ	140	;# 
   169     008D                     PIE2            equ	141	;# 
   170     008E                     PCON            equ	142	;# 
   171     0091                     SSPCON2         equ	145	;# 
   172     0092                     PR2             equ	146	;# 
   173     0093                     SSPADD          equ	147	;# 
   174     0094                     SSPSTAT         equ	148	;# 
   175     0098                     TXSTA           equ	152	;# 
   176     0099                     SPBRG           equ	153	;# 
   177     009C                     CMCON           equ	156	;# 
   178     009D                     CVRCON          equ	157	;# 
   179     009E                     ADRESL          equ	158	;# 
   180     009F                     ADCON1          equ	159	;# 
   181     010C                     EEDATA          equ	268	;# 
   182     010D                     EEADR           equ	269	;# 
   183     010E                     EEDATH          equ	270	;# 
   184     010F                     EEADRH          equ	271	;# 
   185     018C                     EECON1          equ	396	;# 
   186     018D                     EECON2          equ	397	;# 
   187     0000                     INDF            equ	0	;# 
   188     0001                     TMR0            equ	1	;# 
   189     0002                     PCL             equ	2	;# 
   190     0003                     STATUS          equ	3	;# 
   191     0004                     FSR             equ	4	;# 
   192     0005                     PORTA           equ	5	;# 
   193     0006                     PORTB           equ	6	;# 
   194     0007                     PORTC           equ	7	;# 
   195     0008                     PORTD           equ	8	;# 
   196     0009                     PORTE           equ	9	;# 
   197     000A                     PCLATH          equ	10	;# 
   198     000B                     INTCON          equ	11	;# 
   199     000C                     PIR1            equ	12	;# 
   200     000D                     PIR2            equ	13	;# 
   201     000E                     TMR1            equ	14	;# 
   202     000E                     TMR1L           equ	14	;# 
   203     000F                     TMR1H           equ	15	;# 
   204     0010                     T1CON           equ	16	;# 
   205     0011                     TMR2            equ	17	;# 
   206     0012                     T2CON           equ	18	;# 
   207     0013                     SSPBUF          equ	19	;# 
   208     0014                     SSPCON          equ	20	;# 
   209     0015                     CCPR1           equ	21	;# 
   210     0015                     CCPR1L          equ	21	;# 
   211     0016                     CCPR1H          equ	22	;# 
   212     0017                     CCP1CON         equ	23	;# 
   213     0018                     RCSTA           equ	24	;# 
   214     0019                     TXREG           equ	25	;# 
   215     001A                     RCREG           equ	26	;# 
   216     001B                     CCPR2           equ	27	;# 
   217     001B                     CCPR2L          equ	27	;# 
   218     001C                     CCPR2H          equ	28	;# 
   219     001D                     CCP2CON         equ	29	;# 
   220     001E                     ADRESH          equ	30	;# 
   221     001F                     ADCON0          equ	31	;# 
   222     0081                     OPTION_REG      equ	129	;# 
   223     0085                     TRISA           equ	133	;# 
   224     0086                     TRISB           equ	134	;# 
   225     0087                     TRISC           equ	135	;# 
   226     0088                     TRISD           equ	136	;# 
   227     0089                     TRISE           equ	137	;# 
   228     008C                     PIE1            equ	140	;# 
   229     008D                     PIE2            equ	141	;# 
   230     008E                     PCON            equ	142	;# 
   231     0091                     SSPCON2         equ	145	;# 
   232     0092                     PR2             equ	146	;# 
   233     0093                     SSPADD          equ	147	;# 
   234     0094                     SSPSTAT         equ	148	;# 
   235     0098                     TXSTA           equ	152	;# 
   236     0099                     SPBRG           equ	153	;# 
   237     009C                     CMCON           equ	156	;# 
   238     009D                     CVRCON          equ	157	;# 
   239     009E                     ADRESL          equ	158	;# 
   240     009F                     ADCON1          equ	159	;# 
   241     010C                     EEDATA          equ	268	;# 
   242     010D                     EEADR           equ	269	;# 
   243     010E                     EEDATH          equ	270	;# 
   244     010F                     EEADRH          equ	271	;# 
   245     018C                     EECON1          equ	396	;# 
   246     018D                     EECON2          equ	397	;# 
   247     0000                     INDF            equ	0	;# 
   248     0001                     TMR0            equ	1	;# 
   249     0002                     PCL             equ	2	;# 
   250     0003                     STATUS          equ	3	;# 
   251     0004                     FSR             equ	4	;# 
   252     0005                     PORTA           equ	5	;# 
   253     0006                     PORTB           equ	6	;# 
   254     0007                     PORTC           equ	7	;# 
   255     0008                     PORTD           equ	8	;# 
   256     0009                     PORTE           equ	9	;# 
   257     000A                     PCLATH          equ	10	;# 
   258     000B                     INTCON          equ	11	;# 
   259     000C                     PIR1            equ	12	;# 
   260     000D                     PIR2            equ	13	;# 
   261     000E                     TMR1            equ	14	;# 
   262     000E                     TMR1L           equ	14	;# 
   263     000F                     TMR1H           equ	15	;# 
   264     0010                     T1CON           equ	16	;# 
   265     0011                     TMR2            equ	17	;# 
   266     0012                     T2CON           equ	18	;# 
   267     0013                     SSPBUF          equ	19	;# 
   268     0014                     SSPCON          equ	20	;# 
   269     0015                     CCPR1           equ	21	;# 
   270     0015                     CCPR1L          equ	21	;# 
   271     0016                     CCPR1H          equ	22	;# 
   272     0017                     CCP1CON         equ	23	;# 
   273     0018                     RCSTA           equ	24	;# 
   274     0019                     TXREG           equ	25	;# 
   275     001A                     RCREG           equ	26	;# 
   276     001B                     CCPR2           equ	27	;# 
   277     001B                     CCPR2L          equ	27	;# 
   278     001C                     CCPR2H          equ	28	;# 
   279     001D                     CCP2CON         equ	29	;# 
   280     001E                     ADRESH          equ	30	;# 
   281     001F                     ADCON0          equ	31	;# 
   282     0081                     OPTION_REG      equ	129	;# 
   283     0085                     TRISA           equ	133	;# 
   284     0086                     TRISB           equ	134	;# 
   285     0087                     TRISC           equ	135	;# 
   286     0088                     TRISD           equ	136	;# 
   287     0089                     TRISE           equ	137	;# 
   288     008C                     PIE1            equ	140	;# 
   289     008D                     PIE2            equ	141	;# 
   290     008E                     PCON            equ	142	;# 
   291     0091                     SSPCON2         equ	145	;# 
   292     0092                     PR2             equ	146	;# 
   293     0093                     SSPADD          equ	147	;# 
   294     0094                     SSPSTAT         equ	148	;# 
   295     0098                     TXSTA           equ	152	;# 
   296     0099                     SPBRG           equ	153	;# 
   297     009C                     CMCON           equ	156	;# 
   298     009D                     CVRCON          equ	157	;# 
   299     009E                     ADRESL          equ	158	;# 
   300     009F                     ADCON1          equ	159	;# 
   301     010C                     EEDATA          equ	268	;# 
   302     010D                     EEADR           equ	269	;# 
   303     010E                     EEDATH          equ	270	;# 
   304     010F                     EEADRH          equ	271	;# 
   305     018C                     EECON1          equ	396	;# 
   306     018D                     EECON2          equ	397	;# 
   307     0000                     INDF            equ	0	;# 
   308     0001                     TMR0            equ	1	;# 
   309     0002                     PCL             equ	2	;# 
   310     0003                     STATUS          equ	3	;# 
   311     0004                     FSR             equ	4	;# 
   312     0005                     PORTA           equ	5	;# 
   313     0006                     PORTB           equ	6	;# 
   314     0007                     PORTC           equ	7	;# 
   315     0008                     PORTD           equ	8	;# 
   316     0009                     PORTE           equ	9	;# 
   317     000A                     PCLATH          equ	10	;# 
   318     000B                     INTCON          equ	11	;# 
   319     000C                     PIR1            equ	12	;# 
   320     000D                     PIR2            equ	13	;# 
   321     000E                     TMR1            equ	14	;# 
   322     000E                     TMR1L           equ	14	;# 
   323     000F                     TMR1H           equ	15	;# 
   324     0010                     T1CON           equ	16	;# 
   325     0011                     TMR2            equ	17	;# 
   326     0012                     T2CON           equ	18	;# 
   327     0013                     SSPBUF          equ	19	;# 
   328     0014                     SSPCON          equ	20	;# 
   329     0015                     CCPR1           equ	21	;# 
   330     0015                     CCPR1L          equ	21	;# 
   331     0016                     CCPR1H          equ	22	;# 
   332     0017                     CCP1CON         equ	23	;# 
   333     0018                     RCSTA           equ	24	;# 
   334     0019                     TXREG           equ	25	;# 
   335     001A                     RCREG           equ	26	;# 
   336     001B                     CCPR2           equ	27	;# 
   337     001B                     CCPR2L          equ	27	;# 
   338     001C                     CCPR2H          equ	28	;# 
   339     001D                     CCP2CON         equ	29	;# 
   340     001E                     ADRESH          equ	30	;# 
   341     001F                     ADCON0          equ	31	;# 
   342     0081                     OPTION_REG      equ	129	;# 
   343     0085                     TRISA           equ	133	;# 
   344     0086                     TRISB           equ	134	;# 
   345     0087                     TRISC           equ	135	;# 
   346     0088                     TRISD           equ	136	;# 
   347     0089                     TRISE           equ	137	;# 
   348     008C                     PIE1            equ	140	;# 
   349     008D                     PIE2            equ	141	;# 
   350     008E                     PCON            equ	142	;# 
   351     0091                     SSPCON2         equ	145	;# 
   352     0092                     PR2             equ	146	;# 
   353     0093                     SSPADD          equ	147	;# 
   354     0094                     SSPSTAT         equ	148	;# 
   355     0098                     TXSTA           equ	152	;# 
   356     0099                     SPBRG           equ	153	;# 
   357     009C                     CMCON           equ	156	;# 
   358     009D                     CVRCON          equ	157	;# 
   359     009E                     ADRESL          equ	158	;# 
   360     009F                     ADCON1          equ	159	;# 
   361     010C                     EEDATA          equ	268	;# 
   362     010D                     EEADR           equ	269	;# 
   363     010E                     EEDATH          equ	270	;# 
   364     010F                     EEADRH          equ	271	;# 
   365     018C                     EECON1          equ	396	;# 
   366     018D                     EECON2          equ	397	;# 
   367     0000                     INDF            equ	0	;# 
   368     0001                     TMR0            equ	1	;# 
   369     0002                     PCL             equ	2	;# 
   370     0003                     STATUS          equ	3	;# 
   371     0004                     FSR             equ	4	;# 
   372     0005                     PORTA           equ	5	;# 
   373     0006                     PORTB           equ	6	;# 
   374     0007                     PORTC           equ	7	;# 
   375     0008                     PORTD           equ	8	;# 
   376     0009                     PORTE           equ	9	;# 
   377     000A                     PCLATH          equ	10	;# 
   378     000B                     INTCON          equ	11	;# 
   379     000C                     PIR1            equ	12	;# 
   380     000D                     PIR2            equ	13	;# 
   381     000E                     TMR1            equ	14	;# 
   382     000E                     TMR1L           equ	14	;# 
   383     000F                     TMR1H           equ	15	;# 
   384     0010                     T1CON           equ	16	;# 
   385     0011                     TMR2            equ	17	;# 
   386     0012                     T2CON           equ	18	;# 
   387     0013                     SSPBUF          equ	19	;# 
   388     0014                     SSPCON          equ	20	;# 
   389     0015                     CCPR1           equ	21	;# 
   390     0015                     CCPR1L          equ	21	;# 
   391     0016                     CCPR1H          equ	22	;# 
   392     0017                     CCP1CON         equ	23	;# 
   393     0018                     RCSTA           equ	24	;# 
   394     0019                     TXREG           equ	25	;# 
   395     001A                     RCREG           equ	26	;# 
   396     001B                     CCPR2           equ	27	;# 
   397     001B                     CCPR2L          equ	27	;# 
   398     001C                     CCPR2H          equ	28	;# 
   399     001D                     CCP2CON         equ	29	;# 
   400     001E                     ADRESH          equ	30	;# 
   401     001F                     ADCON0          equ	31	;# 
   402     0081                     OPTION_REG      equ	129	;# 
   403     0085                     TRISA           equ	133	;# 
   404     0086                     TRISB           equ	134	;# 
   405     0087                     TRISC           equ	135	;# 
   406     0088                     TRISD           equ	136	;# 
   407     0089                     TRISE           equ	137	;# 
   408     008C                     PIE1            equ	140	;# 
   409     008D                     PIE2            equ	141	;# 
   410     008E                     PCON            equ	142	;# 
   411     0091                     SSPCON2         equ	145	;# 
   412     0092                     PR2             equ	146	;# 
   413     0093                     SSPADD          equ	147	;# 
   414     0094                     SSPSTAT         equ	148	;# 
   415     0098                     TXSTA           equ	152	;# 
   416     0099                     SPBRG           equ	153	;# 
   417     009C                     CMCON           equ	156	;# 
   418     009D                     CVRCON          equ	157	;# 
   419     009E                     ADRESL          equ	158	;# 
   420     009F                     ADCON1          equ	159	;# 
   421     010C                     EEDATA          equ	268	;# 
   422     010D                     EEADR           equ	269	;# 
   423     010E                     EEDATH          equ	270	;# 
   424     010F                     EEADRH          equ	271	;# 
   425     018C                     EECON1          equ	396	;# 
   426     018D                     EECON2          equ	397	;# 
   427                           
   428                           	psect	idataBANK0
   429     0571                     __pidataBANK0:
   430                           
   431                           ;initializer for display@F1335
   432     0571  343F               	retlw	63
   433     0572  3400               	retlw	0
   434     0573  3406               	retlw	6
   435     0574  3400               	retlw	0
   436     0575  345B               	retlw	91
   437     0576  3400               	retlw	0
   438     0577  344F               	retlw	79
   439     0578  3400               	retlw	0
   440     0579  3466               	retlw	102
   441     057A  3400               	retlw	0
   442     057B  346D               	retlw	109
   443     057C  3400               	retlw	0
   444     057D  347D               	retlw	125
   445     057E  3400               	retlw	0
   446     057F  3407               	retlw	7
   447     0580  3400               	retlw	0
   448     0581  347F               	retlw	127
   449     0582  3400               	retlw	0
   450     0583  346F               	retlw	111
   451     0584  3400               	retlw	0
   452                           
   453                           ;initializer for display@F1337
   454     0585  3404               	retlw	4
   455     0586  3400               	retlw	0
   456     0587  3408               	retlw	8
   457     0588  3400               	retlw	0
   458     0589  3410               	retlw	16
   459     058A  3400               	retlw	0
   460     058B  3420               	retlw	32
   461     058C  3400               	retlw	0
   462                           
   463                           ;initializer for isSwitchPressed@once
   464     058D  3401               	retlw	1
   465     000B                     _INTCONbits     set	11
   466     0003                     _STATUSbits     set	3
   467     0006                     _PORTB          set	6
   468     0005                     _PORTA          set	5
   469     0008                     _PORTD          set	8
   470     0086                     _TRISB          set	134
   471     0085                     _TRISA          set	133
   472     0088                     _TRISD          set	136
   473     010C                     _EEDATA         set	268
   474     010D                     _EEADR          set	269
   475     018D                     _EECON2         set	397
   476     018C                     _EECON1         set	396
   477     018C                     _EECON1bits     set	396
   478                           
   479                           	psect	cinit
   480     07E9                     start_initialization:	
   481                           ; #config settings
   482                           
   483     07E9                     __initialization:
   484                           
   485                           ; Initialize objects allocated to BANK0
   486     07E9  1383               	bcf	3,7	;select IRP bank0
   487     07EA  3066               	movlw	low (__pdataBANK0+29)
   488     07EB  00FD               	movwf	btemp+-1
   489     07EC  3005               	movlw	high __pidataBANK0
   490     07ED  00FE               	movwf	btemp
   491     07EE  3071               	movlw	low __pidataBANK0
   492     07EF  00FF               	movwf	btemp+1
   493     07F0  3049               	movlw	low __pdataBANK0
   494     07F1  0084               	movwf	4
   495     07F2  120A  118A  2535  120A  118A  	fcall	init_ram0
   496                           
   497                           ; Clear objects allocated to BANK0
   498     07F7  01E6               	clrf	__pbssBANK0& (0+127)
   499     07F8  01E7               	clrf	(__pbssBANK0+1)& (0+127)
   500     07F9  01E8               	clrf	(__pbssBANK0+2)& (0+127)
   501     07FA  01E9               	clrf	(__pbssBANK0+3)& (0+127)
   502     07FB  01EA               	clrf	(__pbssBANK0+4)& (0+127)
   503     07FC                     end_of_initialization:	
   504                           ;End of C runtime variable initialization code
   505                           
   506     07FC                     __end_of__initialization:
   507     07FC  0183               	clrf	3
   508     07FD  120A  118A  2E07   	ljmp	_main	;jump to C main() function
   509                           
   510                           	psect	bssBANK0
   511     0066                     __pbssBANK0:
   512     0066                     display@F1341:
   513     0066                     	ds	4
   514     006A                     main@count:
   515     006A                     	ds	1
   516                           
   517                           	psect	dataBANK0
   518     0049                     __pdataBANK0:
   519     0049                     display@F1335:
   520     0049                     	ds	20
   521     005D                     display@F1337:
   522     005D                     	ds	8
   523     0065                     isSwitchPressed@once:
   524     0065                     	ds	1
   525                           
   526                           	psect	inittext
   527     0531                     init_fetch0:	
   528                           ;	Called with low address in FSR and high address in W
   529                           
   530     0531  087E               	movf	btemp,w
   531     0532  008A               	movwf	10
   532     0533  087F               	movf	btemp+1,w
   533     0534  0082               	movwf	2
   534     0535                     init_ram0:	
   535                           ;Called with:
   536                           ;	high address of idata address in btemp 
   537                           ;	low address of idata address in btemp+1 
   538                           ;	low address of data in FSR
   539                           ;	high address + 1 of data in btemp-1
   540                           
   541     0535  120A  118A  2531  120A  118A  	fcall	init_fetch0
   542     053A  0080               	movwf	0
   543     053B  0A84               	incf	4,f
   544     053C  0804               	movf	4,w
   545     053D  067D               	xorwf	btemp+-1,w
   546     053E  1903               	btfsc	3,2
   547     053F  3400               	retlw	0
   548     0540  0AFF               	incf	btemp+1,f
   549     0541  1903               	btfsc	3,2
   550     0542  0AFE               	incf	btemp,f
   551     0543  2D35               	goto	init_ram0
   552                           
   553                           	psect	cstackCOMMON
   554     0070                     __pcstackCOMMON:
   555     0070                     ?_delay:
   556     0070                     ?_eeprom_write:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ?_eeprom_read:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ?_init_ssd:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ?_init_digkeypad:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_isSwitchPressed:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ?_init_config:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ?_main:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     ?___awdiv:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0070                     ?___awmod:	
   581                           ; 2 bytes @ 0x0
   582                           
   583     0070                     eeprom_read@addr:	
   584                           ; 2 bytes @ 0x0
   585                           
   586     0070                     eeprom_write@value:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0070                     delay@time:	
   590                           ; 1 bytes @ 0x0
   591                           
   592     0070                     ___awdiv@divisor:	
   593                           ; 2 bytes @ 0x0
   594                           
   595     0070                     ___awmod@divisor:	
   596                           ; 2 bytes @ 0x0
   597                           
   598     0070                     ??_eeprom_read:	
   599                           ; 2 bytes @ 0x0
   600                           
   601     0070                     ??_init_ssd:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0070                     ??_init_digkeypad:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     ??_init_config:	
   608                           ; 1 bytes @ 0x0
   609                           
   610                           
   611                           ; 1 bytes @ 0x0
   612     0070                     	ds	1
   613     0071                     eeprom_write@addr:
   614     0071                     ??_eeprom_write:	
   615                           ; 1 bytes @ 0x1
   616                           
   617                           
   618                           ; 1 bytes @ 0x1
   619     0071                     	ds	1
   620     0072                     ___awdiv@dividend:
   621     0072                     ___awmod@dividend:	
   622                           ; 2 bytes @ 0x2
   623                           
   624     0072                     ??_delay:	
   625                           ; 2 bytes @ 0x2
   626                           
   627                           
   628                           ; 1 bytes @ 0x2
   629     0072                     	ds	1
   630     0073                     delay@i:
   631                           
   632                           ; 2 bytes @ 0x3
   633     0073                     	ds	1
   634     0074                     ___awdiv@counter:
   635     0074                     ___awmod@counter:	
   636                           ; 1 bytes @ 0x4
   637                           
   638     0074                     ??___awdiv:	
   639                           ; 1 bytes @ 0x4
   640                           
   641     0074                     ??___awmod:	
   642                           ; 1 bytes @ 0x4
   643                           
   644                           
   645                           ; 1 bytes @ 0x4
   646     0074                     	ds	1
   647     0075                     ___awdiv@sign:
   648     0075                     ___awmod@sign:	
   649                           ; 1 bytes @ 0x5
   650                           
   651     0075                     ??_isSwitchPressed:	
   652                           ; 1 bytes @ 0x5
   653                           
   654                           
   655                           ; 1 bytes @ 0x5
   656     0075                     	ds	1
   657     0076                     isSwitchPressed@mode:
   658     0076                     ___awdiv@quotient:	
   659                           ; 1 bytes @ 0x6
   660                           
   661                           
   662                           ; 2 bytes @ 0x6
   663     0076                     	ds	2
   664     0078                     ?_display:
   665     0078                     display@digit:	
   666                           ; 1 bytes @ 0x8
   667                           
   668                           
   669                           ; 2 bytes @ 0x8
   670     0078                     	ds	2
   671     007A                     ??_display:
   672                           
   673                           ; 1 bytes @ 0xA
   674     007A                     	ds	4
   675                           
   676                           	psect	cstackBANK0
   677     0020                     __pcstackBANK0:
   678     0020                     display@datamask:
   679                           
   680                           ; 20 bytes @ 0x0
   681     0020                     	ds	20
   682     0034                     display@controlmask:
   683                           
   684                           ; 8 bytes @ 0x14
   685     0034                     	ds	8
   686     003C                     display@digit_1:
   687                           
   688                           ; 2 bytes @ 0x1C
   689     003C                     	ds	2
   690     003E                     display@digit_2:
   691                           
   692                           ; 2 bytes @ 0x1E
   693     003E                     	ds	2
   694     0040                     display@digit_41:
   695                           
   696                           ; 4 bytes @ 0x20
   697     0040                     	ds	4
   698     0044                     display@i:
   699                           
   700                           ; 2 bytes @ 0x24
   701     0044                     	ds	2
   702     0046                     ??_main:
   703                           
   704                           ; 1 bytes @ 0x26
   705     0046                     	ds	2
   706     0048                     main@key:
   707                           
   708                           ; 1 bytes @ 0x28
   709     0048                     	ds	1
   710                           
   711                           	psect	maintext
   712     0607                     __pmaintext:	
   713 ;;
   714 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   715 ;;
   716 ;; *************** function _main *****************
   717 ;; Defined at:
   718 ;;		line 21 in file "main.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;  key             1   40[BANK0 ] unsigned char 
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : B00/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         0       0       0       0       0
   733 ;;      Locals:         0       1       0       0       0
   734 ;;      Temps:          0       2       0       0       0
   735 ;;      Totals:         0       3       0       0       0
   736 ;;Total ram usage:        3 bytes
   737 ;; Hardware stack levels required when called: 2
   738 ;; This function calls:
   739 ;;		_display
   740 ;;		_eeprom_read
   741 ;;		_eeprom_write
   742 ;;		_init_config
   743 ;;		_isSwitchPressed
   744 ;; This function is called by:
   745 ;;		Startup code after reset
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749     0607                     _main:	
   750                           ;psect for function _main
   751                           
   752     0607                     l1079:	
   753                           ;incstack = 0
   754                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   755                           
   756                           
   757                           ;main.c: 23:         };main.c: 24: ;main.c: 26:         {
   758     0607  120A  118A  2519  120A  118A  	fcall	_init_config
   759     060C                     l77:	
   760                           ;main.c: 29: 
   761                           
   762                           
   763                           ;main.c: 30:     };main.c: 32:     {
   764     060C  3001               	movlw	1
   765     060D  120A  118A  25B9  120A  118A  	fcall	_isSwitchPressed
   766     0612  1283               	bcf	3,5	;RP0=0, select bank0
   767     0613  1303               	bcf	3,6	;RP1=0, select bank0
   768     0614  00C8               	movwf	main@key
   769     0615                     l1081:
   770                           
   771                           ;main.c: 34:     }
   772     0615  3006               	movlw	6
   773     0616  0648               	xorwf	main@key,w
   774     0617  1D03               	btfss	3,2
   775     0618  2E1A               	goto	u801
   776     0619  2E1B               	goto	u800
   777     061A                     u801:
   778     061A  2E2D               	goto	l1091
   779     061B                     u800:
   780     061B                     l1083:
   781                           
   782                           ;main.c: 35: ;main.c: 36:     else if(key == 0x03)
   783     061B  300A               	movlw	10
   784     061C  026A               	subwf	main@count,w
   785     061D  1803               	skipnc
   786     061E  2E20               	goto	u811
   787     061F  2E21               	goto	u810
   788     0620                     u811:
   789     0620  2E25               	goto	l1087
   790     0621                     u810:
   791     0621                     l1085:
   792                           
   793                           ;main.c: 37:     {;main.c: 38:         count = eeprom_read(0x00);
   794     0621  086A               	movf	main@count,w
   795     0622  3E01               	addlw	1
   796     0623  00EA               	movwf	main@count
   797                           
   798                           ;main.c: 39:     }
   799     0624  2E4B               	goto	l1099
   800     0625                     l1087:
   801     0625  300A               	movlw	10
   802     0626  066A               	xorwf	main@count,w
   803     0627  1D03               	btfss	3,2
   804     0628  2E2A               	goto	u821
   805     0629  2E2B               	goto	u820
   806     062A                     u821:
   807     062A  2E4B               	goto	l1099
   808     062B                     u820:
   809     062B                     l1089:
   810                           
   811                           ;main.c: 42:     };main.c: 43: 
   812     062B  01EA               	clrf	main@count
   813     062C  2E4B               	goto	l1099
   814     062D                     l1091:
   815     062D  3005               	movlw	5
   816     062E  0648               	xorwf	main@key,w
   817     062F  1D03               	btfss	3,2
   818     0630  2E32               	goto	u831
   819     0631  2E33               	goto	u830
   820     0632                     u831:
   821     0632  2E3C               	goto	l1095
   822     0633                     u830:
   823     0633                     l1093:
   824     0633  086A               	movf	main@count,w
   825     0634  00F0               	movwf	eeprom_write@value
   826     0635  3000               	movlw	0
   827     0636  120A  118A  258E  120A  118A  	fcall	_eeprom_write
   828     063B  2E4B               	goto	l1099
   829     063C                     l1095:
   830     063C  3003               	movlw	3
   831     063D  0648               	xorwf	main@key,w
   832     063E  1D03               	btfss	3,2
   833     063F  2E41               	goto	u841
   834     0640  2E42               	goto	u840
   835     0641                     u841:
   836     0641  2E4B               	goto	l1099
   837     0642                     u840:
   838     0642                     l1097:
   839     0642  3000               	movlw	0
   840     0643  120A  118A  2544  120A  118A  	fcall	_eeprom_read
   841     0648  1283               	bcf	3,5	;RP0=0, select bank0
   842     0649  1303               	bcf	3,6	;RP1=0, select bank0
   843     064A  00EA               	movwf	main@count
   844     064B                     l1099:
   845     064B  1283               	bcf	3,5	;RP0=0, select bank0
   846     064C  1303               	bcf	3,6	;RP1=0, select bank0
   847     064D  086A               	movf	main@count,w
   848     064E  00C6               	movwf	??_main
   849     064F  01C7               	clrf	??_main+1
   850     0650  0846               	movf	??_main,w
   851     0651  00F8               	movwf	display@digit
   852     0652  0847               	movf	??_main+1,w
   853     0653  00F9               	movwf	display@digit+1
   854     0654  120A  118A  2717  120A  118A  	fcall	_display
   855     0659  2E0C               	goto	l77
   856     065A  120A  118A  2800   	ljmp	start
   857     065D                     __end_of_main:
   858                           
   859                           	psect	text1
   860     05B9                     __ptext1:	
   861 ;; *************** function _isSwitchPressed *****************
   862 ;; Defined at:
   863 ;;		line 9 in file "digkeypad.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;  mode            1    wreg     unsigned char 
   866 ;; Auto vars:     Size  Location     Type
   867 ;;  mode            1    6[COMMON] unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      unsigned char 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0, pclath, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         0       0       0       0       0
   878 ;;      Locals:         1       0       0       0       0
   879 ;;      Temps:          1       0       0       0       0
   880 ;;      Totals:         2       0       0       0       0
   881 ;;Total ram usage:        2 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; Hardware stack levels required when called: 1
   884 ;; This function calls:
   885 ;;		_delay
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891     05B9                     _isSwitchPressed:	
   892                           ;psect for function _isSwitchPressed
   893                           
   894                           
   895                           ;incstack = 0
   896                           ; Regs used in _isSwitchPressed: [wreg+status,2+status,0+pclath+cstack]
   897                           ;isSwitchPressed@mode stored from wreg
   898     05B9  00F6               	movwf	isSwitchPressed@mode
   899     05BA                     l1015:
   900                           
   901                           ;digkeypad.c: 9: unsigned char isSwitchPressed(unsigned char mode);digkeypad.c: 10: {;di
      +                          gkeypad.c: 11:     static unsigned char once = 1;;digkeypad.c: 13:     if(mode == 1)
   902     05BA  0376               	decf	isSwitchPressed@mode,w
   903     05BB  1D03               	btfss	3,2
   904     05BC  2DBE               	goto	u701
   905     05BD  2DBF               	goto	u700
   906     05BE                     u701:
   907     05BE  2DE9               	goto	l1039
   908     05BF                     u700:
   909     05BF                     l1017:
   910                           
   911                           ;digkeypad.c: 14:     {;digkeypad.c: 17:         delay(500);
   912     05BF  30F4               	movlw	244
   913     05C0  00F0               	movwf	delay@time
   914     05C1  3001               	movlw	1
   915     05C2  00F1               	movwf	delay@time+1
   916     05C3  120A  118A  2559  120A  118A  	fcall	_delay
   917     05C8                     l1019:
   918                           
   919                           ;digkeypad.c: 18:         if (((PORTB & 0x07) != (0x07)) && (once == 1))
   920     05C8  3007               	movlw	7
   921     05C9  1283               	bcf	3,5	;RP0=0, select bank0
   922     05CA  1303               	bcf	3,6	;RP1=0, select bank0
   923     05CB  0506               	andwf	6,w	;volatile
   924     05CC  00F5               	movwf	??_isSwitchPressed
   925     05CD  3007               	movlw	7
   926     05CE  0675               	xorwf	??_isSwitchPressed,w
   927     05CF  1903               	btfsc	3,2
   928     05D0  2DD2               	goto	u711
   929     05D1  2DD3               	goto	u710
   930     05D2                     u711:
   931     05D2  2DDC               	goto	l1031
   932     05D3                     u710:
   933     05D3                     l1021:
   934     05D3  0365               	decf	isSwitchPressed@once,w
   935     05D4  1D03               	btfss	3,2
   936     05D5  2DD7               	goto	u721
   937     05D6  2DD8               	goto	u720
   938     05D7                     u721:
   939     05D7  2DDC               	goto	l1031
   940     05D8                     u720:
   941     05D8                     l1023:
   942                           
   943                           ;digkeypad.c: 19:         {;digkeypad.c: 20:             once = 0;
   944     05D8  01E5               	clrf	isSwitchPressed@once
   945     05D9                     l1025:
   946                           
   947                           ;digkeypad.c: 21:             return PORTB & 0x07;
   948     05D9  0806               	movf	6,w	;volatile
   949     05DA  3907               	andlw	7
   950     05DB  2E06               	goto	l42
   951     05DC                     l1031:
   952     05DC  3007               	movlw	7
   953     05DD  0506               	andwf	6,w	;volatile
   954     05DE  00F5               	movwf	??_isSwitchPressed
   955     05DF  3007               	movlw	7
   956     05E0  0675               	xorwf	??_isSwitchPressed,w
   957     05E1  1D03               	btfss	3,2
   958     05E2  2DE4               	goto	u731
   959     05E3  2DE5               	goto	u730
   960     05E4                     u731:
   961     05E4  2DE7               	goto	l1035
   962     05E5                     u730:
   963     05E5                     l1033:
   964                           
   965                           ;digkeypad.c: 25:         {;digkeypad.c: 26:             once = 1;
   966     05E5  3001               	movlw	1
   967     05E6  00E5               	movwf	isSwitchPressed@once
   968     05E7                     l1035:
   969                           
   970                           ;digkeypad.c: 27:             return 0x07;
   971     05E7  3007               	movlw	7
   972     05E8  2E06               	goto	l42
   973     05E9                     l1039:
   974     05E9  3002               	movlw	2
   975     05EA  0676               	xorwf	isSwitchPressed@mode,w
   976     05EB  1D03               	btfss	3,2
   977     05EC  2DEE               	goto	u741
   978     05ED  2DEF               	goto	u740
   979     05EE                     u741:
   980     05EE  2DE7               	goto	l1035
   981     05EF                     u740:
   982     05EF                     l1041:
   983                           
   984                           ;digkeypad.c: 32:     {;digkeypad.c: 34:         delay(500);
   985     05EF  30F4               	movlw	244
   986     05F0  00F0               	movwf	delay@time
   987     05F1  3001               	movlw	1
   988     05F2  00F1               	movwf	delay@time+1
   989     05F3  120A  118A  2559  120A  118A  	fcall	_delay
   990     05F8                     l1043:
   991                           
   992                           ;digkeypad.c: 37:         if ((PORTB & 0x07)!= 0x07)
   993     05F8  3007               	movlw	7
   994     05F9  1283               	bcf	3,5	;RP0=0, select bank0
   995     05FA  1303               	bcf	3,6	;RP1=0, select bank0
   996     05FB  0506               	andwf	6,w	;volatile
   997     05FC  00F5               	movwf	??_isSwitchPressed
   998     05FD  3007               	movlw	7
   999     05FE  0675               	xorwf	??_isSwitchPressed,w
  1000     05FF  1903               	btfsc	3,2
  1001     0600  2E02               	goto	u751
  1002     0601  2E03               	goto	u750
  1003     0602                     u751:
  1004     0602  2E04               	goto	l1051
  1005     0603                     u750:
  1006     0603  2DD9               	goto	l1025
  1007     0604                     l1051:
  1008     0604  0806               	movf	6,w	;volatile
  1009     0605  2DE7               	goto	l1035
  1010     0606                     l42:
  1011     0606  0008               	return
  1012     0607                     __end_of_isSwitchPressed:
  1013                           
  1014                           	psect	text2
  1015     0519                     __ptext2:	
  1016 ;; *************** function _init_config *****************
  1017 ;; Defined at:
  1018 ;;		line 16 in file "main.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg, status,2, status,0, pclath, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1032 ;;      Params:         0       0       0       0       0
  1033 ;;      Locals:         0       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0
  1035 ;;      Totals:         0       0       0       0       0
  1036 ;;Total ram usage:        0 bytes
  1037 ;; Hardware stack levels used: 1
  1038 ;; Hardware stack levels required when called: 1
  1039 ;; This function calls:
  1040 ;;		_init_digkeypad
  1041 ;;		_init_ssd
  1042 ;; This function is called by:
  1043 ;;		_main
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047     0519                     _init_config:	
  1048                           ;psect for function _init_config
  1049                           
  1050     0519                     l1061:	
  1051                           ;incstack = 0
  1052                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  1053                           
  1054                           
  1055                           ;main.c: 18:     if(key == 0x06)
  1056     0519  120A  118A  2524  120A  118A  	fcall	_init_ssd
  1057                           
  1058                           ;main.c: 19:     {
  1059     051E  120A  118A  2513  120A  118A  	fcall	_init_digkeypad
  1060     0523                     l70:
  1061     0523  0008               	return
  1062     0524                     __end_of_init_config:
  1063                           
  1064                           	psect	text3
  1065     0524                     __ptext3:	
  1066 ;; *************** function _init_ssd *****************
  1067 ;; Defined at:
  1068 ;;		line 2 in file "ssd.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;		None
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;		None
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg, status,2
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1082 ;;      Params:         0       0       0       0       0
  1083 ;;      Locals:         0       0       0       0       0
  1084 ;;      Temps:          0       0       0       0       0
  1085 ;;      Totals:         0       0       0       0       0
  1086 ;;Total ram usage:        0 bytes
  1087 ;; Hardware stack levels used: 1
  1088 ;; This function calls:
  1089 ;;		Nothing
  1090 ;; This function is called by:
  1091 ;;		_init_config
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095     0524                     _init_ssd:	
  1096                           ;psect for function _init_ssd
  1097                           
  1098     0524                     l885:	
  1099                           ;incstack = 0
  1100                           ; Regs used in _init_ssd: [wreg+status,2]
  1101                           
  1102                           
  1103                           ;ssd.c: 5:     TRISD = 0x00;
  1104     0524  1683               	bsf	3,5	;RP0=1, select bank1
  1105     0525  1303               	bcf	3,6	;RP1=0, select bank1
  1106     0526  0188               	clrf	8	;volatile
  1107     0527                     l887:
  1108                           
  1109                           ;ssd.c: 8:     TRISA = TRISA & 0xc3;
  1110     0527  0805               	movf	5,w	;volatile
  1111     0528  39C3               	andlw	195
  1112     0529  0085               	movwf	5	;volatile
  1113     052A                     l889:
  1114                           
  1115                           ;ssd.c: 11:     PORTD = 0x00;
  1116     052A  1283               	bcf	3,5	;RP0=0, select bank0
  1117     052B  1303               	bcf	3,6	;RP1=0, select bank0
  1118     052C  0188               	clrf	8	;volatile
  1119                           
  1120                           ;ssd.c: 14:     PORTA = PORTA & 0xc3;
  1121     052D  0805               	movf	5,w	;volatile
  1122     052E  39C3               	andlw	195
  1123     052F  0085               	movwf	5	;volatile
  1124     0530                     l13:
  1125     0530  0008               	return
  1126     0531                     __end_of_init_ssd:
  1127                           
  1128                           	psect	text4
  1129     0513                     __ptext4:	
  1130 ;; *************** function _init_digkeypad *****************
  1131 ;; Defined at:
  1132 ;;		line 2 in file "digkeypad.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         0       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0
  1148 ;;      Temps:          0       0       0       0       0
  1149 ;;      Totals:         0       0       0       0       0
  1150 ;;Total ram usage:        0 bytes
  1151 ;; Hardware stack levels used: 1
  1152 ;; This function calls:
  1153 ;;		Nothing
  1154 ;; This function is called by:
  1155 ;;		_init_config
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159     0513                     _init_digkeypad:	
  1160                           ;psect for function _init_digkeypad
  1161                           
  1162     0513                     l895:	
  1163                           ;incstack = 0
  1164                           ; Regs used in _init_digkeypad: [wreg+status,2]
  1165                           
  1166                           
  1167                           ;digkeypad.c: 5:     TRISB = TRISB | 0x07;
  1168     0513  1683               	bsf	3,5	;RP0=1, select bank1
  1169     0514  1303               	bcf	3,6	;RP1=0, select bank1
  1170     0515  0806               	movf	6,w	;volatile
  1171     0516  3807               	iorlw	7
  1172     0517  0086               	movwf	6	;volatile
  1173     0518                     l35:
  1174     0518  0008               	return
  1175     0519                     __end_of_init_digkeypad:
  1176                           
  1177                           	psect	text5
  1178     058E                     __ptext5:	
  1179 ;; *************** function _eeprom_write *****************
  1180 ;; Defined at:
  1181 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eewrite.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  addr            1    wreg     unsigned char 
  1184 ;;  value           1    0[COMMON] unsigned char 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  addr            1    1[COMMON] unsigned char 
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      void 
  1189 ;; Registers used:
  1190 ;;		wreg, status,2, status,0
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1196 ;;      Params:         1       0       0       0       0
  1197 ;;      Locals:         1       0       0       0       0
  1198 ;;      Temps:          0       0       0       0       0
  1199 ;;      Totals:         2       0       0       0       0
  1200 ;;Total ram usage:        2 bytes
  1201 ;; Hardware stack levels used: 1
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209     058E                     _eeprom_write:	
  1210                           ;psect for function _eeprom_write
  1211                           
  1212                           
  1213                           ;incstack = 0
  1214                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  1215                           ;eeprom_write@addr stored from wreg
  1216     058E  00F1               	movwf	eeprom_write@addr
  1217     058F                     l200:	
  1218                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eewrite.c: 6: eeprom_write(u
      +                          nsigned char addr, unsigned char value);C:\Program Files\Microchip\xc8\v2.50\pic\sources
      +                          \c99\pic\__eewrite.c: 7: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__ee
      +                          write.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); E
      +                          ECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCO
      +                          Nbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EEC
      +                          ON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  1219                           
  1220     058F                     l201:
  1221     058F  1683               	bsf	3,5	;RP0=1, select bank3
  1222     0590  1703               	bsf	3,6	;RP1=1, select bank3
  1223     0591  188C               	btfsc	12,1	;volsfr
  1224     0592  2D94               	goto	u761
  1225     0593  2D95               	goto	u760
  1226     0594                     u761:
  1227     0594  2D8F               	goto	l201
  1228     0595                     u760:
  1229     0595                     l1063:
  1230     0595  0871               	movf	eeprom_write@addr,w
  1231     0596  1283               	bcf	3,5	;RP0=0, select bank2
  1232     0597  1703               	bsf	3,6	;RP1=1, select bank2
  1233     0598  008D               	movwf	13	;volatile
  1234     0599  0870               	movf	eeprom_write@value,w
  1235     059A  008C               	movwf	12	;volatile
  1236     059B                     l1065:
  1237     059B  303F               	movlw	63
  1238     059C  1683               	bsf	3,5	;RP0=1, select bank3
  1239     059D  1703               	bsf	3,6	;RP1=1, select bank3
  1240     059E  058C               	andwf	12,f	;volsfr
  1241     059F                     l1067:
  1242     059F  1283               	bcf	3,5	;RP0=0, select bank0
  1243     05A0  1303               	bcf	3,6	;RP1=0, select bank0
  1244     05A1  1003               	bcf	3,0	;volatile
  1245     05A2                     l1069:
  1246     05A2  1F8B               	btfss	11,7	;volatile
  1247     05A3  2DA5               	goto	u771
  1248     05A4  2DA6               	goto	u770
  1249     05A5                     u771:
  1250     05A5  2DA7               	goto	l204
  1251     05A6                     u770:
  1252     05A6                     l1071:
  1253     05A6  1403               	bsf	3,0	;volatile
  1254     05A7                     l204:
  1255     05A7  138B               	bcf	11,7	;volatile
  1256     05A8  1683               	bsf	3,5	;RP0=1, select bank3
  1257     05A9  1703               	bsf	3,6	;RP1=1, select bank3
  1258     05AA  150C               	bsf	12,2	;volsfr
  1259     05AB  3055               	movlw	85
  1260     05AC  008D               	movwf	13	;volsfr
  1261     05AD  30AA               	movlw	170
  1262     05AE  008D               	movwf	13	;volsfr
  1263     05AF  148C               	bsf	12,1	;volsfr
  1264     05B0  110C               	bcf	12,2	;volsfr
  1265     05B1  1283               	bcf	3,5	;RP0=0, select bank0
  1266     05B2  1303               	bcf	3,6	;RP1=0, select bank0
  1267     05B3  1C03               	btfss	3,0	;volatile
  1268     05B4  2DB6               	goto	u781
  1269     05B5  2DB7               	goto	u780
  1270     05B6                     u781:
  1271     05B6  2DB8               	goto	l207
  1272     05B7                     u780:
  1273     05B7                     l1073:
  1274     05B7  178B               	bsf	11,7	;volatile
  1275     05B8                     l207:
  1276     05B8  0008               	return
  1277     05B9                     __end_of_eeprom_write:
  1278                           
  1279                           	psect	text6
  1280     0544                     __ptext6:	
  1281 ;; *************** function _eeprom_read *****************
  1282 ;; Defined at:
  1283 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeread.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  addr            1    wreg     unsigned char 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  addr            1    0[COMMON] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      unsigned char 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1297 ;;      Params:         0       0       0       0       0
  1298 ;;      Locals:         1       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0
  1300 ;;      Totals:         1       0       0       0       0
  1301 ;;Total ram usage:        1 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310     0544                     _eeprom_read:	
  1311                           ;psect for function _eeprom_read
  1312                           
  1313                           
  1314                           ;incstack = 0
  1315                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  1316                           ;eeprom_read@addr stored from wreg
  1317     0544  00F0               	movwf	eeprom_read@addr
  1318     0545                     l181:	
  1319                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeread.c: 6: eeprom_read(uns
      +                          igned char addr);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeread.c: 7:
      +                           {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeread.c: 8:  do
  1320                           
  1321     0545  0064               	clrwdt	;# 
  1322     0546  1683               	bsf	3,5	;RP0=1, select bank3
  1323     0547  1703               	bsf	3,6	;RP1=1, select bank3
  1324     0548  188C               	btfsc	12,1	;volsfr
  1325     0549  2D4B               	goto	u791
  1326     054A  2D4C               	goto	u790
  1327     054B                     u791:
  1328     054B  2D45               	goto	l181
  1329     054C                     u790:
  1330     054C                     l1075:
  1331                           
  1332                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\pic\__eeread.c: 18:  return ( EEAD
      +                          R = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  1333     054C  0870               	movf	eeprom_read@addr,w
  1334     054D  1283               	bcf	3,5	;RP0=0, select bank2
  1335     054E  1703               	bsf	3,6	;RP1=1, select bank2
  1336     054F  008D               	movwf	13	;volatile
  1337     0550  303F               	movlw	63
  1338     0551  1683               	bsf	3,5	;RP0=1, select bank3
  1339     0552  1703               	bsf	3,6	;RP1=1, select bank3
  1340     0553  058C               	andwf	12,f	;volsfr
  1341     0554  140C               	bsf	12,0	;volsfr
  1342     0555  1283               	bcf	3,5	;RP0=0, select bank2
  1343     0556  1703               	bsf	3,6	;RP1=1, select bank2
  1344     0557  080C               	movf	12,w	;volatile
  1345     0558                     l183:
  1346     0558  0008               	return
  1347     0559                     __end_of_eeprom_read:
  1348                           
  1349                           	psect	text7
  1350     0717                     __ptext7:	
  1351 ;; *************** function _display *****************
  1352 ;; Defined at:
  1353 ;;		line 20 in file "ssd.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  digit           2    8[COMMON] int 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  i               2   36[BANK0 ] int 
  1358 ;;  digit           4   32[BANK0 ] int [2]
  1359 ;;  digit_2         2   30[BANK0 ] int 
  1360 ;;  digit_1         2   28[BANK0 ] int 
  1361 ;;  datamask       20    0[BANK0 ] int [10]
  1362 ;;  controlmask     8   20[BANK0 ] int [4]
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1372 ;;      Params:         2       0       0       0       0
  1373 ;;      Locals:         0      38       0       0       0
  1374 ;;      Temps:          4       0       0       0       0
  1375 ;;      Totals:         6      38       0       0       0
  1376 ;;Total ram usage:       44 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; Hardware stack levels required when called: 1
  1379 ;; This function calls:
  1380 ;;		___awdiv
  1381 ;;		___awmod
  1382 ;;		_delay
  1383 ;; This function is called by:
  1384 ;;		_main
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388     0717                     _display:	
  1389                           ;psect for function _display
  1390                           
  1391     0717                     l979:	
  1392                           ;incstack = 0
  1393                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1394                           
  1395                           
  1396                           ;ssd.c: 20: void display(int digit);ssd.c: 21: {;ssd.c: 24:     int datamask[10] = {0x3f
      +                          , 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f};
  1397     0717  3049               	movlw	display@F1335& (0+255)
  1398     0718  0084               	movwf	4
  1399     0719  3020               	movlw	low display@datamask
  1400     071A  00FA               	movwf	??_display
  1401     071B  3014               	movlw	20
  1402     071C  00FB               	movwf	??_display+1
  1403     071D                     u630:
  1404     071D  1383               	bcf	3,7	;select IRP bank0
  1405     071E  0800               	movf	0,w
  1406     071F  00FC               	movwf	??_display+2
  1407     0720  0A04               	incf	4,w
  1408     0721  00FD               	movwf	??_display+3
  1409     0722  087A               	movf	??_display,w
  1410     0723  0084               	movwf	4
  1411     0724  087C               	movf	??_display+2,w
  1412     0725  0080               	movwf	0
  1413     0726  0A04               	incf	4,w
  1414     0727  00FA               	movwf	??_display
  1415     0728  087D               	movf	??_display+3,w
  1416     0729  0084               	movwf	4
  1417     072A  0BFB               	decfsz	??_display+1,f
  1418     072B  2F1D               	goto	u630
  1419                           
  1420                           ;ssd.c: 27:     int controlmask[4] = {0x04, 0x08, 0x10, 0x20};
  1421     072C  305D               	movlw	display@F1337& (0+255)
  1422     072D  0084               	movwf	4
  1423     072E  3034               	movlw	low display@controlmask
  1424     072F  00FA               	movwf	??_display
  1425     0730  3008               	movlw	8
  1426     0731  00FB               	movwf	??_display+1
  1427     0732                     u640:
  1428     0732  1383               	bcf	3,7	;select IRP bank0
  1429     0733  0800               	movf	0,w
  1430     0734  00FC               	movwf	??_display+2
  1431     0735  0A04               	incf	4,w
  1432     0736  00FD               	movwf	??_display+3
  1433     0737  087A               	movf	??_display,w
  1434     0738  0084               	movwf	4
  1435     0739  087C               	movf	??_display+2,w
  1436     073A  0080               	movwf	0
  1437     073B  0A04               	incf	4,w
  1438     073C  00FA               	movwf	??_display
  1439     073D  087D               	movf	??_display+3,w
  1440     073E  0084               	movwf	4
  1441     073F  0BFB               	decfsz	??_display+1,f
  1442     0740  2F32               	goto	u640
  1443     0741                     l981:
  1444                           
  1445                           ;ssd.c: 30:     if(digit >= 0 && digit < 10)
  1446     0741  1BF9               	btfsc	display@digit+1,7
  1447     0742  2F44               	goto	u651
  1448     0743  2F45               	goto	u650
  1449     0744                     u651:
  1450     0744  2F60               	goto	l989
  1451     0745                     u650:
  1452     0745                     l983:
  1453     0745  0879               	movf	display@digit+1,w
  1454     0746  3A80               	xorlw	128
  1455     0747  00FF               	movwf	btemp+1
  1456     0748  3080               	movlw	128
  1457     0749  027F               	subwf	btemp+1,w
  1458     074A  1D03               	skipz
  1459     074B  2F4E               	goto	u665
  1460     074C  300A               	movlw	10
  1461     074D  0278               	subwf	display@digit,w
  1462     074E                     u665:
  1463     074E  1803               	skipnc
  1464     074F  2F51               	goto	u661
  1465     0750  2F52               	goto	u660
  1466     0751                     u661:
  1467     0751  2F60               	goto	l989
  1468     0752                     u660:
  1469     0752                     l985:
  1470                           
  1471                           ;ssd.c: 31:     {;ssd.c: 32:         PORTD = (PORTD & 0x00) | datamask[digit];
  1472     0752  0878               	movf	display@digit,w
  1473     0753  00FA               	movwf	??_display
  1474     0754  077A               	addwf	??_display,w
  1475     0755  3E20               	addlw	(low (display@datamask| 0))& (0+255)
  1476     0756  0084               	movwf	4
  1477     0757  1383               	bcf	3,7	;select IRP bank0
  1478     0758  0800               	movf	0,w
  1479     0759  1283               	bcf	3,5	;RP0=0, select bank0
  1480     075A  1303               	bcf	3,6	;RP1=0, select bank0
  1481     075B  0088               	movwf	8	;volatile
  1482     075C                     l987:
  1483                           
  1484                           ;ssd.c: 33:         PORTA = (PORTA & 0xc3) | controlmask[0];
  1485     075C  0805               	movf	5,w	;volatile
  1486     075D  39C3               	andlw	195
  1487     075E  0434               	iorwf	display@controlmask,w
  1488     075F  0085               	movwf	5	;volatile
  1489     0760                     l989:
  1490                           
  1491                           ;ssd.c: 37:     if(digit >= 10 && digit < 100)
  1492     0760  0879               	movf	display@digit+1,w
  1493     0761  3A80               	xorlw	128
  1494     0762  00FF               	movwf	btemp+1
  1495     0763  3080               	movlw	128
  1496     0764  027F               	subwf	btemp+1,w
  1497     0765  1D03               	skipz
  1498     0766  2F69               	goto	u675
  1499     0767  300A               	movlw	10
  1500     0768  0278               	subwf	display@digit,w
  1501     0769                     u675:
  1502     0769  1C03               	skipc
  1503     076A  2F6C               	goto	u671
  1504     076B  2F6D               	goto	u670
  1505     076C                     u671:
  1506     076C  2FE8               	goto	l26
  1507     076D                     u670:
  1508     076D                     l991:
  1509     076D  0879               	movf	display@digit+1,w
  1510     076E  3A80               	xorlw	128
  1511     076F  00FF               	movwf	btemp+1
  1512     0770  3080               	movlw	128
  1513     0771  027F               	subwf	btemp+1,w
  1514     0772  1D03               	skipz
  1515     0773  2F76               	goto	u685
  1516     0774  3064               	movlw	100
  1517     0775  0278               	subwf	display@digit,w
  1518     0776                     u685:
  1519     0776  1803               	skipnc
  1520     0777  2F79               	goto	u681
  1521     0778  2F7A               	goto	u680
  1522     0779                     u681:
  1523     0779  2FE8               	goto	l26
  1524     077A                     u680:
  1525     077A                     l993:
  1526                           
  1527                           ;ssd.c: 38:     {;ssd.c: 39:         int digit_1 = digit / 10;
  1528     077A  300A               	movlw	10
  1529     077B  00F0               	movwf	___awdiv@divisor
  1530     077C  3000               	movlw	0
  1531     077D  00F1               	movwf	___awdiv@divisor+1
  1532     077E  0879               	movf	display@digit+1,w
  1533     077F  00F3               	movwf	___awdiv@dividend+1
  1534     0780  0878               	movf	display@digit,w
  1535     0781  00F2               	movwf	___awdiv@dividend
  1536     0782  120A  118A  26B4  120A  118A  	fcall	___awdiv
  1537     0787  0871               	movf	?___awdiv+1,w
  1538     0788  1283               	bcf	3,5	;RP0=0, select bank0
  1539     0789  1303               	bcf	3,6	;RP1=0, select bank0
  1540     078A  00BD               	movwf	display@digit_1+1
  1541     078B  0870               	movf	?___awdiv,w
  1542     078C  00BC               	movwf	display@digit_1
  1543                           
  1544                           ;ssd.c: 41:         int digit_2 = digit % 10;
  1545     078D  300A               	movlw	10
  1546     078E  00F0               	movwf	___awmod@divisor
  1547     078F  3000               	movlw	0
  1548     0790  00F1               	movwf	___awmod@divisor+1
  1549     0791  0879               	movf	display@digit+1,w
  1550     0792  00F3               	movwf	___awmod@dividend+1
  1551     0793  0878               	movf	display@digit,w
  1552     0794  00F2               	movwf	___awmod@dividend
  1553     0795  120A  118A  265D  120A  118A  	fcall	___awmod
  1554     079A  0871               	movf	?___awmod+1,w
  1555     079B  1283               	bcf	3,5	;RP0=0, select bank0
  1556     079C  1303               	bcf	3,6	;RP1=0, select bank0
  1557     079D  00BF               	movwf	display@digit_2+1
  1558     079E  0870               	movf	?___awmod,w
  1559     079F  00BE               	movwf	display@digit_2
  1560     07A0                     l995:
  1561                           
  1562                           ;ssd.c: 43:         int digit[2] = {digit_1, digit_2};
  1563     07A0  3000               	movlw	0
  1564     07A1  00C3               	movwf	display@digit_41+3
  1565     07A2  3000               	movlw	0
  1566     07A3  00C2               	movwf	display@digit_41+2
  1567     07A4  3000               	movlw	0
  1568     07A5  00C1               	movwf	display@digit_41+1
  1569     07A6  3000               	movlw	0
  1570     07A7  00C0               	movwf	display@digit_41
  1571     07A8                     l997:
  1572     07A8  083D               	movf	display@digit_1+1,w
  1573     07A9  00C1               	movwf	display@digit_41+1
  1574     07AA  083C               	movf	display@digit_1,w
  1575     07AB  00C0               	movwf	display@digit_41
  1576     07AC                     l999:
  1577     07AC  083F               	movf	display@digit_2+1,w
  1578     07AD  00C3               	movwf	display@digit_41+3
  1579     07AE  083E               	movf	display@digit_2,w
  1580     07AF  00C2               	movwf	display@digit_41+2
  1581     07B0                     l1001:
  1582                           
  1583                           ;ssd.c: 45:         for(int i = 0; i < 2; i++)
  1584     07B0  01C4               	clrf	display@i
  1585     07B1  01C5               	clrf	display@i+1
  1586     07B2                     l1007:
  1587                           
  1588                           ;ssd.c: 46:         {;ssd.c: 47:             PORTD = (PORTD & 0x00) | datamask[digit[i]]
      +                          ;
  1589     07B2  1283               	bcf	3,5	;RP0=0, select bank0
  1590     07B3  1303               	bcf	3,6	;RP1=0, select bank0
  1591     07B4  0844               	movf	display@i,w
  1592     07B5  00FA               	movwf	??_display
  1593     07B6  077A               	addwf	??_display,w
  1594     07B7  3E40               	addlw	(low (display@digit_41| 0))& (0+255)
  1595     07B8  0084               	movwf	4
  1596     07B9  1383               	bcf	3,7	;select IRP bank0
  1597     07BA  0800               	movf	0,w
  1598     07BB  00FB               	movwf	??_display+1
  1599     07BC  077B               	addwf	??_display+1,w
  1600     07BD  3E20               	addlw	(low (display@datamask| 0))& (0+255)
  1601     07BE  0084               	movwf	4
  1602     07BF  0800               	movf	0,w
  1603     07C0  0088               	movwf	8	;volatile
  1604                           
  1605                           ;ssd.c: 48:             PORTA = (PORTA & 0xc3) | controlmask[i];
  1606     07C1  0844               	movf	display@i,w
  1607     07C2  00FA               	movwf	??_display
  1608     07C3  077A               	addwf	??_display,w
  1609     07C4  3E34               	addlw	(low (display@controlmask| 0))& (0+255)
  1610     07C5  0084               	movwf	4
  1611     07C6  0805               	movf	5,w	;volatile
  1612     07C7  39C3               	andlw	195
  1613     07C8  0400               	iorwf	0,w
  1614     07C9  0085               	movwf	5	;volatile
  1615     07CA                     l1009:
  1616                           
  1617                           ;ssd.c: 49:             delay(200);
  1618     07CA  30C8               	movlw	200
  1619     07CB  00F0               	movwf	delay@time
  1620     07CC  3000               	movlw	0
  1621     07CD  00F1               	movwf	delay@time+1
  1622     07CE  120A  118A  2559  120A  118A  	fcall	_delay
  1623     07D3                     l1011:
  1624                           
  1625                           ;ssd.c: 50:         }
  1626     07D3  3001               	movlw	1
  1627     07D4  1283               	bcf	3,5	;RP0=0, select bank0
  1628     07D5  1303               	bcf	3,6	;RP1=0, select bank0
  1629     07D6  07C4               	addwf	display@i,f
  1630     07D7  1803               	skipnc
  1631     07D8  0AC5               	incf	display@i+1,f
  1632     07D9  3000               	movlw	0
  1633     07DA  07C5               	addwf	display@i+1,f
  1634     07DB                     l1013:
  1635     07DB  0845               	movf	display@i+1,w
  1636     07DC  3A80               	xorlw	128
  1637     07DD  00FF               	movwf	btemp+1
  1638     07DE  3080               	movlw	128
  1639     07DF  027F               	subwf	btemp+1,w
  1640     07E0  1D03               	skipz
  1641     07E1  2FE4               	goto	u695
  1642     07E2  3002               	movlw	2
  1643     07E3  0244               	subwf	display@i,w
  1644     07E4                     u695:
  1645     07E4  1C03               	skipc
  1646     07E5  2FE7               	goto	u691
  1647     07E6  2FE8               	goto	u690
  1648     07E7                     u691:
  1649     07E7  2FB2               	goto	l1007
  1650     07E8                     u690:
  1651     07E8                     l26:
  1652     07E8  0008               	return
  1653     07E9                     __end_of_display:
  1654                           
  1655                           	psect	text8
  1656     0559                     __ptext8:	
  1657 ;; *************** function _delay *****************
  1658 ;; Defined at:
  1659 ;;		line 50 in file "digkeypad.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;  time            2    0[COMMON] int 
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;  i               2    3[COMMON] int 
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, status,2
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1673 ;;      Params:         2       0       0       0       0
  1674 ;;      Locals:         2       0       0       0       0
  1675 ;;      Temps:          1       0       0       0       0
  1676 ;;      Totals:         5       0       0       0       0
  1677 ;;Total ram usage:        5 bytes
  1678 ;; Hardware stack levels used: 1
  1679 ;; This function calls:
  1680 ;;		Nothing
  1681 ;; This function is called by:
  1682 ;;		_display
  1683 ;;		_isSwitchPressed
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687     0559                     _delay:	
  1688                           ;psect for function _delay
  1689                           
  1690     0559                     l891:	
  1691                           ;incstack = 0
  1692                           ; Regs used in _delay: [wreg+status,2]
  1693                           
  1694                           
  1695                           ;digkeypad.c: 50: void delay(int time);digkeypad.c: 51: {;digkeypad.c: 52:     for(int i
      +                           = 0; i < time; i++);
  1696     0559  01F3               	clrf	delay@i
  1697     055A  01F4               	clrf	delay@i+1
  1698     055B  2D62               	goto	l52
  1699     055C                     l893:
  1700     055C  3001               	movlw	1
  1701     055D  07F3               	addwf	delay@i,f
  1702     055E  1803               	skipnc
  1703     055F  0AF4               	incf	delay@i+1,f
  1704     0560  3000               	movlw	0
  1705     0561  07F4               	addwf	delay@i+1,f
  1706     0562                     l52:
  1707     0562  0874               	movf	delay@i+1,w
  1708     0563  3A80               	xorlw	128
  1709     0564  00F2               	movwf	??_delay
  1710     0565  0871               	movf	delay@time+1,w
  1711     0566  3A80               	xorlw	128
  1712     0567  0272               	subwf	??_delay,w
  1713     0568  1D03               	skipz
  1714     0569  2D6C               	goto	u435
  1715     056A  0870               	movf	delay@time,w
  1716     056B  0273               	subwf	delay@i,w
  1717     056C                     u435:
  1718     056C  1C03               	skipc
  1719     056D  2D6F               	goto	u431
  1720     056E  2D70               	goto	u430
  1721     056F                     u431:
  1722     056F  2D5C               	goto	l893
  1723     0570                     u430:
  1724     0570                     l55:
  1725     0570  0008               	return
  1726     0571                     __end_of_delay:
  1727                           
  1728                           	psect	text9
  1729     065D                     __ptext9:	
  1730 ;; *************** function ___awmod *****************
  1731 ;; Defined at:
  1732 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  divisor         2    0[COMMON] int 
  1735 ;;  dividend        2    2[COMMON] int 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  sign            1    5[COMMON] unsigned char 
  1738 ;;  counter         1    4[COMMON] unsigned char 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  2    0[COMMON] int 
  1741 ;; Registers used:
  1742 ;;		wreg, status,2, status,0
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1748 ;;      Params:         4       0       0       0       0
  1749 ;;      Locals:         2       0       0       0       0
  1750 ;;      Temps:          0       0       0       0       0
  1751 ;;      Totals:         6       0       0       0       0
  1752 ;;Total ram usage:        6 bytes
  1753 ;; Hardware stack levels used: 1
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_display
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761     065D                     ___awmod:	
  1762                           ;psect for function ___awmod
  1763                           
  1764     065D                     l941:	
  1765                           ;incstack = 0
  1766                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1767                           
  1768     065D  01F5               	clrf	___awmod@sign
  1769     065E                     l943:
  1770     065E  1FF3               	btfss	___awmod@dividend+1,7
  1771     065F  2E61               	goto	u541
  1772     0660  2E62               	goto	u540
  1773     0661                     u541:
  1774     0661  2E69               	goto	l949
  1775     0662                     u540:
  1776     0662                     l945:
  1777     0662  09F2               	comf	___awmod@dividend,f
  1778     0663  09F3               	comf	___awmod@dividend+1,f
  1779     0664  0AF2               	incf	___awmod@dividend,f
  1780     0665  1903               	skipnz
  1781     0666  0AF3               	incf	___awmod@dividend+1,f
  1782     0667                     l947:
  1783     0667  3001               	movlw	1
  1784     0668  00F5               	movwf	___awmod@sign
  1785     0669                     l949:
  1786     0669  1FF1               	btfss	___awmod@divisor+1,7
  1787     066A  2E6C               	goto	u551
  1788     066B  2E6D               	goto	u550
  1789     066C                     u551:
  1790     066C  2E72               	goto	l953
  1791     066D                     u550:
  1792     066D                     l951:
  1793     066D  09F0               	comf	___awmod@divisor,f
  1794     066E  09F1               	comf	___awmod@divisor+1,f
  1795     066F  0AF0               	incf	___awmod@divisor,f
  1796     0670  1903               	skipnz
  1797     0671  0AF1               	incf	___awmod@divisor+1,f
  1798     0672                     l953:
  1799     0672  0870               	movf	___awmod@divisor,w
  1800     0673  0471               	iorwf	___awmod@divisor+1,w
  1801     0674  1903               	btfsc	3,2
  1802     0675  2E77               	goto	u561
  1803     0676  2E78               	goto	u560
  1804     0677                     u561:
  1805     0677  2EA5               	goto	l971
  1806     0678                     u560:
  1807     0678                     l955:
  1808     0678  3001               	movlw	1
  1809     0679  00F4               	movwf	___awmod@counter
  1810     067A  2E84               	goto	l961
  1811     067B                     l957:
  1812     067B  3001               	movlw	1
  1813     067C                     u575:
  1814     067C  1003               	clrc
  1815     067D  0DF0               	rlf	___awmod@divisor,f
  1816     067E  0DF1               	rlf	___awmod@divisor+1,f
  1817     067F  3EFF               	addlw	-1
  1818     0680  1D03               	skipz
  1819     0681  2E7C               	goto	u575
  1820     0682                     l959:
  1821     0682  3001               	movlw	1
  1822     0683  07F4               	addwf	___awmod@counter,f
  1823     0684                     l961:
  1824     0684  1FF1               	btfss	___awmod@divisor+1,7
  1825     0685  2E87               	goto	u581
  1826     0686  2E88               	goto	u580
  1827     0687                     u581:
  1828     0687  2E7B               	goto	l957
  1829     0688                     u580:
  1830     0688                     l963:
  1831     0688  0871               	movf	___awmod@divisor+1,w
  1832     0689  0273               	subwf	___awmod@dividend+1,w
  1833     068A  1D03               	skipz
  1834     068B  2E8E               	goto	u595
  1835     068C  0870               	movf	___awmod@divisor,w
  1836     068D  0272               	subwf	___awmod@dividend,w
  1837     068E                     u595:
  1838     068E  1C03               	skipc
  1839     068F  2E91               	goto	u591
  1840     0690  2E92               	goto	u590
  1841     0691                     u591:
  1842     0691  2E98               	goto	l967
  1843     0692                     u590:
  1844     0692                     l965:
  1845     0692  0870               	movf	___awmod@divisor,w
  1846     0693  02F2               	subwf	___awmod@dividend,f
  1847     0694  0871               	movf	___awmod@divisor+1,w
  1848     0695  1C03               	skipc
  1849     0696  03F3               	decf	___awmod@dividend+1,f
  1850     0697  02F3               	subwf	___awmod@dividend+1,f
  1851     0698                     l967:
  1852     0698  3001               	movlw	1
  1853     0699                     u605:
  1854     0699  1003               	clrc
  1855     069A  0CF1               	rrf	___awmod@divisor+1,f
  1856     069B  0CF0               	rrf	___awmod@divisor,f
  1857     069C  3EFF               	addlw	-1
  1858     069D  1D03               	skipz
  1859     069E  2E99               	goto	u605
  1860     069F                     l969:
  1861     069F  3001               	movlw	1
  1862     06A0  02F4               	subwf	___awmod@counter,f
  1863     06A1  1D03               	btfss	3,2
  1864     06A2  2EA4               	goto	u611
  1865     06A3  2EA5               	goto	u610
  1866     06A4                     u611:
  1867     06A4  2E88               	goto	l963
  1868     06A5                     u610:
  1869     06A5                     l971:
  1870     06A5  0875               	movf	___awmod@sign,w
  1871     06A6  1903               	btfsc	3,2
  1872     06A7  2EA9               	goto	u621
  1873     06A8  2EAA               	goto	u620
  1874     06A9                     u621:
  1875     06A9  2EAF               	goto	l975
  1876     06AA                     u620:
  1877     06AA                     l973:
  1878     06AA  09F2               	comf	___awmod@dividend,f
  1879     06AB  09F3               	comf	___awmod@dividend+1,f
  1880     06AC  0AF2               	incf	___awmod@dividend,f
  1881     06AD  1903               	skipnz
  1882     06AE  0AF3               	incf	___awmod@dividend+1,f
  1883     06AF                     l975:
  1884     06AF  0873               	movf	___awmod@dividend+1,w
  1885     06B0  00F1               	movwf	?___awmod+1
  1886     06B1  0872               	movf	___awmod@dividend,w
  1887     06B2  00F0               	movwf	?___awmod
  1888     06B3                     l377:
  1889     06B3  0008               	return
  1890     06B4                     __end_of___awmod:
  1891                           
  1892                           	psect	text10
  1893     06B4                     __ptext10:	
  1894 ;; *************** function ___awdiv *****************
  1895 ;; Defined at:
  1896 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;  divisor         2    0[COMMON] int 
  1899 ;;  dividend        2    2[COMMON] int 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  quotient        2    6[COMMON] int 
  1902 ;;  sign            1    5[COMMON] unsigned char 
  1903 ;;  counter         1    4[COMMON] unsigned char 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  2    0[COMMON] int 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1913 ;;      Params:         4       0       0       0       0
  1914 ;;      Locals:         4       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0
  1916 ;;      Totals:         8       0       0       0       0
  1917 ;;Total ram usage:        8 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_display
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926     06B4                     ___awdiv:	
  1927                           ;psect for function ___awdiv
  1928                           
  1929     06B4                     l897:	
  1930                           ;incstack = 0
  1931                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1932                           
  1933     06B4  01F5               	clrf	___awdiv@sign
  1934     06B5                     l899:
  1935     06B5  1FF1               	btfss	___awdiv@divisor+1,7
  1936     06B6  2EB8               	goto	u441
  1937     06B7  2EB9               	goto	u440
  1938     06B8                     u441:
  1939     06B8  2EC0               	goto	l905
  1940     06B9                     u440:
  1941     06B9                     l901:
  1942     06B9  09F0               	comf	___awdiv@divisor,f
  1943     06BA  09F1               	comf	___awdiv@divisor+1,f
  1944     06BB  0AF0               	incf	___awdiv@divisor,f
  1945     06BC  1903               	skipnz
  1946     06BD  0AF1               	incf	___awdiv@divisor+1,f
  1947     06BE                     l903:
  1948     06BE  3001               	movlw	1
  1949     06BF  00F5               	movwf	___awdiv@sign
  1950     06C0                     l905:
  1951     06C0  1FF3               	btfss	___awdiv@dividend+1,7
  1952     06C1  2EC3               	goto	u451
  1953     06C2  2EC4               	goto	u450
  1954     06C3                     u451:
  1955     06C3  2ECB               	goto	l911
  1956     06C4                     u450:
  1957     06C4                     l907:
  1958     06C4  09F2               	comf	___awdiv@dividend,f
  1959     06C5  09F3               	comf	___awdiv@dividend+1,f
  1960     06C6  0AF2               	incf	___awdiv@dividend,f
  1961     06C7  1903               	skipnz
  1962     06C8  0AF3               	incf	___awdiv@dividend+1,f
  1963     06C9                     l909:
  1964     06C9  3001               	movlw	1
  1965     06CA  06F5               	xorwf	___awdiv@sign,f
  1966     06CB                     l911:
  1967     06CB  01F6               	clrf	___awdiv@quotient
  1968     06CC  01F7               	clrf	___awdiv@quotient+1
  1969     06CD                     l913:
  1970     06CD  0870               	movf	___awdiv@divisor,w
  1971     06CE  0471               	iorwf	___awdiv@divisor+1,w
  1972     06CF  1903               	btfsc	3,2
  1973     06D0  2ED2               	goto	u461
  1974     06D1  2ED3               	goto	u460
  1975     06D2                     u461:
  1976     06D2  2F08               	goto	l933
  1977     06D3                     u460:
  1978     06D3                     l915:
  1979     06D3  3001               	movlw	1
  1980     06D4  00F4               	movwf	___awdiv@counter
  1981     06D5  2EDF               	goto	l921
  1982     06D6                     l917:
  1983     06D6  3001               	movlw	1
  1984     06D7                     u475:
  1985     06D7  1003               	clrc
  1986     06D8  0DF0               	rlf	___awdiv@divisor,f
  1987     06D9  0DF1               	rlf	___awdiv@divisor+1,f
  1988     06DA  3EFF               	addlw	-1
  1989     06DB  1D03               	skipz
  1990     06DC  2ED7               	goto	u475
  1991     06DD                     l919:
  1992     06DD  3001               	movlw	1
  1993     06DE  07F4               	addwf	___awdiv@counter,f
  1994     06DF                     l921:
  1995     06DF  1FF1               	btfss	___awdiv@divisor+1,7
  1996     06E0  2EE2               	goto	u481
  1997     06E1  2EE3               	goto	u480
  1998     06E2                     u481:
  1999     06E2  2ED6               	goto	l917
  2000     06E3                     u480:
  2001     06E3                     l923:
  2002     06E3  3001               	movlw	1
  2003     06E4                     u495:
  2004     06E4  1003               	clrc
  2005     06E5  0DF6               	rlf	___awdiv@quotient,f
  2006     06E6  0DF7               	rlf	___awdiv@quotient+1,f
  2007     06E7  3EFF               	addlw	-1
  2008     06E8  1D03               	skipz
  2009     06E9  2EE4               	goto	u495
  2010     06EA  0871               	movf	___awdiv@divisor+1,w
  2011     06EB  0273               	subwf	___awdiv@dividend+1,w
  2012     06EC  1D03               	skipz
  2013     06ED  2EF0               	goto	u505
  2014     06EE  0870               	movf	___awdiv@divisor,w
  2015     06EF  0272               	subwf	___awdiv@dividend,w
  2016     06F0                     u505:
  2017     06F0  1C03               	skipc
  2018     06F1  2EF3               	goto	u501
  2019     06F2  2EF4               	goto	u500
  2020     06F3                     u501:
  2021     06F3  2EFB               	goto	l929
  2022     06F4                     u500:
  2023     06F4                     l925:
  2024     06F4  0870               	movf	___awdiv@divisor,w
  2025     06F5  02F2               	subwf	___awdiv@dividend,f
  2026     06F6  0871               	movf	___awdiv@divisor+1,w
  2027     06F7  1C03               	skipc
  2028     06F8  03F3               	decf	___awdiv@dividend+1,f
  2029     06F9  02F3               	subwf	___awdiv@dividend+1,f
  2030     06FA                     l927:
  2031     06FA  1476               	bsf	___awdiv@quotient,0
  2032     06FB                     l929:
  2033     06FB  3001               	movlw	1
  2034     06FC                     u515:
  2035     06FC  1003               	clrc
  2036     06FD  0CF1               	rrf	___awdiv@divisor+1,f
  2037     06FE  0CF0               	rrf	___awdiv@divisor,f
  2038     06FF  3EFF               	addlw	-1
  2039     0700  1D03               	skipz
  2040     0701  2EFC               	goto	u515
  2041     0702                     l931:
  2042     0702  3001               	movlw	1
  2043     0703  02F4               	subwf	___awdiv@counter,f
  2044     0704  1D03               	btfss	3,2
  2045     0705  2F07               	goto	u521
  2046     0706  2F08               	goto	u520
  2047     0707                     u521:
  2048     0707  2EE3               	goto	l923
  2049     0708                     u520:
  2050     0708                     l933:
  2051     0708  0875               	movf	___awdiv@sign,w
  2052     0709  1903               	btfsc	3,2
  2053     070A  2F0C               	goto	u531
  2054     070B  2F0D               	goto	u530
  2055     070C                     u531:
  2056     070C  2F12               	goto	l937
  2057     070D                     u530:
  2058     070D                     l935:
  2059     070D  09F6               	comf	___awdiv@quotient,f
  2060     070E  09F7               	comf	___awdiv@quotient+1,f
  2061     070F  0AF6               	incf	___awdiv@quotient,f
  2062     0710  1903               	skipnz
  2063     0711  0AF7               	incf	___awdiv@quotient+1,f
  2064     0712                     l937:
  2065     0712  0877               	movf	___awdiv@quotient+1,w
  2066     0713  00F1               	movwf	?___awdiv+1
  2067     0714  0876               	movf	___awdiv@quotient,w
  2068     0715  00F0               	movwf	?___awdiv
  2069     0716                     l364:
  2070     0716  0008               	return
  2071     0717                     __end_of___awdiv:
  2072     0002                     ___latbits      equ	2
  2073     007E                     btemp           set	126	;btemp
  2074     007E                     wtemp0          set	126
  2075                           
  2076                           	psect	config
  2077                           
  2078                           ;Config register CONFIG @ 0x2007
  2079                           ;	Oscillator Selection bits
  2080                           ;	FOSC = 0x3, unprogrammed default
  2081                           ;	Watchdog Timer Enable bit
  2082                           ;	WDTE = OFF, WDT disabled
  2083                           ;	Power-up Timer Enable bit
  2084                           ;	PWRTE = 0x1, unprogrammed default
  2085                           ;	Brown-out Reset Enable bit
  2086                           ;	BOREN = 0x1, unprogrammed default
  2087                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2088                           ;	LVP = 0x1, unprogrammed default
  2089                           ;	Data EEPROM Memory Code Protection bit
  2090                           ;	CPD = 0x1, unprogrammed default
  2091                           ;	Flash Program Memory Write Enable bits
  2092                           ;	WRT = 0x3, unprogrammed default
  2093                           ;	In-Circuit Debugger Mode bit
  2094                           ;	DEBUG = 0x1, unprogrammed default
  2095                           ;	Flash Program Memory Code Protection bit
  2096                           ;	CP = 0x1, unprogrammed default
  2097     2007                     	org	8199
  2098     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        29
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      75
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_display
    _isSwitchPressed->_delay
    _display->___awdiv

Critical Paths under _main in BANK0

    _main->_display

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1337
                                             38 BANK0      3     3      0
                            _display
                        _eeprom_read
                       _eeprom_write
                        _init_config
                    _isSwitchPressed
 ---------------------------------------------------------------------------------
 (1) _isSwitchPressed                                      2     2      0     107
                                              5 COMMON     2     2      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                     _init_digkeypad
                           _init_ssd
 ---------------------------------------------------------------------------------
 (2) _init_ssd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_digkeypad                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         2     1      1      52
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display                                             44    42      2    1082
                                              8 COMMON     6     4      2
                                              0 BANK0     38    38      0
                            ___awdiv
                            ___awmod
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     3      2      49
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     302
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
     ___awdiv
     ___awmod
     _delay
   _eeprom_read
   _eeprom_write
   _init_config
     _init_digkeypad
     _init_ssd
   _isSwitchPressed
     _delay

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     41      75     93.8%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      89      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Jan 07 20:40:23 2025

                      pc 0002                       l13 0530                       l26 07E8  
                     l42 0606                       l35 0518                       l52 0562  
                     l70 0523                       l55 0570                       l77 060C  
           ___awdiv@sign 0075                       fsr 0004                      l200 058F  
                    l201 058F                      l204 05A7                      l207 05B8  
                    l181 0545                      l183 0558                      l364 0716  
                    l377 06B3                      l901 06B9                      l911 06CB  
                    l903 06BE                      l921 06DF                      l913 06CD  
                    l905 06C0                      l931 0702                      l923 06E3  
                    l915 06D3                      l907 06C4                      l925 06F4  
                    l917 06D6                      l933 0708                      l909 06C9  
                    l941 065D                      l935 070D                      l927 06FA  
                    l919 06DD                      l951 066D                      l943 065E  
                    l937 0712                      l929 06FB                      l961 0684  
                    l953 0672                      l945 0662                      l963 0688  
                    l955 0678                      l971 06A5                      l947 0667  
                    l891 0559                      l973 06AA                      l965 0692  
                    l957 067B                      l949 0669                      l893 055C  
                    l981 0741                      l885 0524                      l975 06AF  
                    l967 0698                      l959 0682                      l991 076D  
                    l983 0745                      l895 0513                      l887 0527  
                    l897 06B4                      l969 069F                      l993 077A  
                    l985 0752                      l889 052A                      l899 06B5  
                    l995 07A0                      l987 075C                      l979 0717  
                    l997 07A8                      l989 0760                      l999 07AC  
                    u500 06F4                      u501 06F3                      u430 0570  
                    u431 056F                      u520 0708                      u440 06B9  
                    u521 0707                      u505 06F0                      u441 06B8  
                    u530 070D                      u450 06C4                      u610 06A5  
                    u531 070C                      u515 06FC                      u451 06C3  
                    u611 06A4                      u435 056C                      u460 06D3  
                    u620 06AA                      u540 0662                      u700 05BF  
                    u461 06D2                      u621 06A9                      u605 0699  
                    u541 0661                      u701 05BE                      u550 066D  
                    u630 071D                      u710 05D3                      u551 066C  
                    u711 05D2                      u480 06E3                      u560 0678  
                    u640 0732                      u720 05D8                      u800 061B  
                    u481 06E2                      u561 0677                      u721 05D7  
                    u801 061A                      u650 0745                      u730 05E5  
                    u810 0621                      u475 06D7                      u651 0744  
                    u731 05E4                      u811 0620                      u580 0688  
                    u660 0752                      u740 05EF                      u820 062B  
                    u581 0687                      u661 0751                      u741 05EE  
                    u821 062A                      u590 0692                      u670 076D  
                    u750 0603                      u830 0633                      u495 06E4  
                    u591 0691                      u575 067C                      u671 076C  
                    u751 0602                      u831 0632                      u680 077A  
                    u760 0595                      u840 0642                      u681 0779  
                    u665 074E                      u761 0594                      u841 0641  
                    u690 07E8                      u770 05A6                      u595 068E  
                    u691 07E7                      u675 0769                      u771 05A5  
                    u780 05B7                      u685 0776                      u781 05B6  
                    u790 054C                      u695 07E4                      u791 054B  
                    fsr0 0004                      indf 0000             ___awmod@sign 0075  
                   l1001 07B0                     l1011 07D3                     l1013 07DB  
                   l1021 05D3                     l1007 07B2                     l1023 05D8  
                   l1031 05DC                     l1015 05BA                     l1009 07CA  
                   l1041 05EF                     l1033 05E5                     l1025 05D9  
                   l1017 05BF                     l1051 0604                     l1043 05F8  
                   l1035 05E7                     l1019 05C8                     l1061 0519  
                   l1071 05A6                     l1063 0595                     l1039 05E9  
                   l1073 05B7                     l1065 059B                     l1081 0615  
                   l1075 054C                     l1067 059F                     l1083 061B  
                   l1091 062D                     l1069 05A2                     l1093 0633  
                   l1085 0621                     l1095 063C                     l1087 0625  
                   l1079 0607                     l1097 0642                     l1089 062B  
                   l1099 064B           ??_eeprom_write 0071                     _main 0607  
                   btemp 007E                     start 0000             display@F1341 0066  
           display@F1335 0049             display@F1337 005D                    ?_main 0070  
        __end_of___awdiv 0717                    _EEADR 010D          __end_of___awmod 06B4  
        ___awdiv@divisor 0070             ?_init_config 0070          ___awdiv@counter 0074  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
           display@digit 0078          __end_of_display 07E9                    _delay 0559  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E9             __end_of_main 065D                   ??_main 0046  
                 ?_delay 0070                   _EEDATA 010C                   _EECON1 018C  
                 _EECON2 018D         ___awdiv@dividend 0072                ??___awdiv 0074  
              ??___awmod 0074                   delay@i 0073         __end_of_init_ssd 0531  
       ___awdiv@quotient 0076          ___awmod@divisor 0070     __end_of_eeprom_write 05B9  
        ___awmod@counter 0074                ??_display 007A  __end_of__initialization 07FC  
        eeprom_read@addr 0070           __pcstackCOMMON 0070             __pidataBANK0 0571  
          __end_of_delay 0571        eeprom_write@value 0070                  ??_delay 0072  
    isSwitchPressed@mode 0076      isSwitchPressed@once 0065               __pbssBANK0 0066  
             __pmaintext 0607                ?_init_ssd 0070           display@digit_1 003C  
         display@digit_2 003E                  ___awdiv 06B4                  ___awmod 065D  
     display@controlmask 0034                  __ptext1 05B9                  __ptext2 0519  
                __ptext3 0524                  __ptext4 0513                  __ptext5 058E  
                __ptext6 0544                  __ptext7 0717                  __ptext8 0559  
                __ptext9 065D                  _display 0717         ___awmod@dividend 0072  
                main@key 0048     end_of_initialization 07FC             _eeprom_write 058E  
             ??_init_ssd 0070        ??_isSwitchPressed 0075            ??_eeprom_read 0070  
    start_initialization 07E9           _init_digkeypad 0513      __end_of_eeprom_read 0559  
             init_fetch0 0531              __pdataBANK0 0049            ??_init_config 0070  
              ___latbits 0002            __pcstackBANK0 0020   __end_of_init_digkeypad 0519  
       eeprom_write@addr 0071                 ?___awdiv 0070                 ?___awmod 0070  
               ?_display 0078      __end_of_init_config 0524          ?_init_digkeypad 0070  
              delay@time 0070          _isSwitchPressed 05B9              _eeprom_read 0544  
              main@count 006A          display@datamask 0020          display@digit_41 0040  
             _EECON1bits 018C              _init_config 0519  __end_of_isSwitchPressed 0607  
               __ptext10 06B4                 _init_ssd 0524                 display@i 0044  
             _INTCONbits 000B                 init_ram0 0535         ??_init_digkeypad 0070  
       ?_isSwitchPressed 0070            ?_eeprom_write 0070               _STATUSbits 0003  
           ?_eeprom_read 0070  
